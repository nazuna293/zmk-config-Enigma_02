#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        arrow_left_right: behavior_sensor_rotate_arrow_le {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp RIGHT>;

            tap-ms = <20>;
        };

        arrow_up_down: behavior_sensor_rotate_arrow_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp UP>, <&kp DOWN>;

            tap-ms = <20>;
        };

        page_up_down: behavior_sensor_rotate_page_up_ {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp PAGE_UP>, <&kp PAGE_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt TAB Q  &kp W   &kp E 
            >;
        };

        layer_1 {
            bindings = <
&mt TAB Q  &kp W   &kp E 
            >;
        };

        layer_2 {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)
            >;
        };

        layer_3 {
            bindings = <
&kp F1   &kp F2   &kp F3
            >;
        };

        ARROW {
            bindings = <
&none   &none   &none
            >;
        };

        MEDIA {
            bindings = <
&none   &none   &none
            >;
        };

        CTRL_ALT_TAB_TB {
            bindings = <
&none   &none   &none
            >;
        };

        ALT_TAB_TB {
            bindings = <
&none   &none   &none
            >;
        };

        CTRL_TAB_TB {
            bindings = <
&none   &none   &none
            >;
        };
    };
};


&trackball {
    scroll-layers = <2>;
    // snipe-layers = <3>;

    arrows {
        layers = <4>;
        bindings =
            <&kp RIGHT_ARROW>,
            <&kp LEFT_ARROW>,
            <&kp UP_ARROW>,
            <&kp DOWN_ARROW>;

        tick = <10>;
    };

     volume {
         layers = <5>;
         bindings =
             <&none>,
             <&none>,
             <&kp C_VOLUME_UP>,
             <&kp C_VOLUME_DOWN>;
    };

    ctrl_alt_tab {
        layers = <6>;
        bindings =
            <&to_kp ALT_TAB_TB TAB>,
            <&to_kp ALT_TAB_TB LS(TAB)>,
            <&to_kp CTRL_TAB_TB LCTRL>,
            <&to_kp CTRL_TAB_TB LS(LCTRL)>;
        tick = <10>;
    };

    alt_tab {
        layers = <7>;
        bindings =
            <&kp TAB>,
            <&kp LS(TAB)>,
            <&kp UP_ARROW>,
            <&kp DOWN_ARROW>;

        tick = <80>;
    };

    ctrl_tab {
        layers = <8>;
        bindings =
            <&kp UP_ARROW>,
            <&kp DOWN_ARROW>,
            <&kp LS(TAB)>,
            <&kp TAB>;

        tick = <80>;
    };
};